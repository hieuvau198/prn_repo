@page
@model Web.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Products List";
}

<h2>Products</h2>

<a asp-page="Create" class="btn btn-primary mb-3">Create New Product</a>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Product Name</th>
            <th>Category</th>
            <th>Units In Stock</th>
            <th>Unit Price</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>@product.ProductName</td>
                <td>@product.CategoryName</td>
                <td>@product.UnitsInStock</td>
                <td>@product.UnitPrice?.ToString("C")</td>
                <td>
                    <a asp-page="Edit" asp-route-id="@product.ProductId" class="btn btn-warning btn-sm">Edit</a>
                    <form method="post" asp-page-handler="Delete" asp-route-id="@product.ProductId" style="display:inline;">
                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure?');">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>


<!-- ✅ Add SignalR script -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/productHub") // ✅ Connect to the SignalR Hub
        .build();

    // Start the connection
    connection.start().then(() => console.log("Connected to ProductHub!")).catch(err => console.error(err));

    // Reload the page when product data changes
    connection.on("ReceiveProductUpdate", function () {
        location.reload(); // ✅ Automatically reloads page when products update
    });
</script>