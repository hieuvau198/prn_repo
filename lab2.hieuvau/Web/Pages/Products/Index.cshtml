@page
@model Web.Pages.Products.IndexModel
@{
    ViewData["Title"] = "Products List";
}

@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @Model.Message
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h2>Products</h2>

<a asp-page="Create" class="btn btn-primary mb-3">Create New Product</a>

<form method="get" class="row g-2 mb-3">
    <div class="col-md-2">
        <label class="form-label">Search By</label>
        <select class="form-select" asp-for="SearchBy">
            <option value="ProductName">Product Name</option>
            <option value="CategoryName">Category Name</option>
        </select>
    </div>

    <div class="col-md-3">
        <label class="form-label">Keyword</label>
        <input class="form-control" asp-for="SearchTerm" placeholder="Enter keyword..." />
    </div>

    <div class="col-md-2">
        <label class="form-label">Stock Below</label>
        <select asp-for="StockBelow" class="form-select">
            <option value="">-- Any --</option>
            <option value="50">Below 50</option>
            <option value="100">Below 100</option>
        </select>
    </div>

    <div class="col-md-2">
        <label class="form-label">Price Above</label>
        <select asp-for="PriceAbove" class="form-select">
            <option value="">-- Any --</option>
            <option value="30">Above $30</option>
            <option value="60">Above $60</option>
        </select>
    </div>
    <div class="col-md-3">
        <label class="form-label">Category</label>
        <select asp-for="FilterCategoryId" asp-items="Model.Categories" class="form-select">
            <option value="">-- All Categories --</option>
        </select>
    </div>

    <div class="col-md-auto align-self-end">
        <button type="submit" class="btn btn-primary">Filter</button>
    </div>

    <div class="col-md-auto align-self-end">
        <a asp-page="./Index" class="btn btn-secondary">Reset</a>
    </div>
</form>


<table class="table table-bordered">
    <thead>
        <tr>
            <th>Product Name</th>
            <th>Category</th>
            <th>Units In Stock</th>
            <th>Unit Price</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>@product.ProductName</td>
                <td>@product.CategoryName</td>
                <td>@product.UnitsInStock</td>
                <td>@product.UnitPrice?.ToString("C")</td>
                <td>
                    <a asp-page="Edit" asp-route-id="@product.ProductId" class="btn btn-warning btn-sm">Edit</a>
                    @if (Model.MemberRole == "1")
                    {
                        <form method="post" asp-page-handler="Delete" asp-route-id="@product.ProductId" style="display:inline;">
                            <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure?');">Delete</button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination controls with updated property names -->
<div class="d-flex justify-content-between align-items-center mt-4">
    <a class="btn btn-outline-secondary @(Model.PageNumber <= 1 ? "disabled" : "")"
       asp-page="./Index"
       asp-route-pageNumber="@(Model.PageNumber > 1 ? Model.PageNumber - 1 : 1)"
       asp-route-pageSize="@Model.PageSize">
        Previous
    </a>

    <span>Page @Model.PageNumber of @Model.TotalPages</span>

    <a class="btn btn-outline-secondary @(Model.PageNumber >= Model.TotalPages ? "disabled" : "")"
       asp-page="./Index"
       asp-route-pageNumber="@(Model.PageNumber < Model.TotalPages ? Model.PageNumber + 1 : Model.TotalPages)"
       asp-route-pageSize="@Model.PageSize">
        Next
    </a>
</div>

<div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div id="productToast" class="toast bg-success text-white" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Product Update</strong>
            <small>Just now</small>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            A product has been updated successfully!
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/productHub")
        .build();

    connection.start().then(() => console.log("Connected to ProductHub!")).catch(err => console.error(err));

    connection.on("ReceiveProductUpdate", function () {
        location.reload(true);
    });

    connection.on("ReceiveNotication", function (message) {
        let toastBody = document.querySelector("#productToast .toast-body");
        toastBody.textContent = message;
        let toast = new bootstrap.Toast(document.getElementById('productToast'));
        toast.show();
    });

</script>
