@page
@model Web.Pages.Products.CreateModel
@{
    ViewData["Title"] = "Create Product";
}

<h2>Create Product</h2>

<div class="alert alert-info mb-4">
    <i class="bi bi-info-circle"></i> Please complete all required fields marked with an asterisk (*).
    All values will be validated to ensure product quality and consistency.
</div>

<form method="post" novalidate>
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    <div class="mb-3">
        <label asp-for="Product.ProductName" class="form-label">Product Name *</label>
        <input asp-for="Product.ProductName" class="form-control" placeholder="Enter product name (min 10 characters)" />
        <span asp-validation-for="Product.ProductName" class="text-danger"></span>
        <small class="text-muted">Each word must start with a capital letter or number. No special characters allowed.</small>
    </div>

    <div class="mb-3">
        <label asp-for="Product.CategoryId" class="form-label">Category *</label>
        <select asp-for="Product.CategoryId" asp-items="Model.Categories" class="form-select">
            <option value="">-- Select Category --</option>
        </select>
        <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Product.UnitsInStock" class="form-label">Units In Stock *</label>
        <input asp-for="Product.UnitsInStock" class="form-control" type="number" min="0" max="10000" placeholder="Enter quantity (0-10,000)" />
        <span asp-validation-for="Product.UnitsInStock" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Product.UnitPrice" class="form-label">Unit Price ($) *</label>
        <div class="input-group">
            <span class="input-group-text">$</span>
            <input asp-for="Product.UnitPrice" class="form-control" type="number" min="0.01" step="0.01" placeholder="Enter price (min $0.01)" />
        </div>
        <span asp-validation-for="Product.UnitPrice" class="text-danger"></span>
    </div>

    <div class="mt-4">
        <button type="submit" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Create Product
        </button>
        <a asp-page="Index" class="btn btn-secondary">
            <i class="bi bi-x-circle"></i> Cancel
        </a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Custom client-side validation to provide immediate feedback
        $(document).ready(function() {
            // Show feedback on product name as user types
            $("#Product_ProductName").on("input", function() {
                let input = $(this).val();
                if (input.length > 0 && input.length < 10) {
                    $(this).addClass("is-invalid");
                    $(this).next(".text-danger").text("Product name must be at least 10 characters long");
                } else if (input.length >= 10) {
                    let regex = /^([A-Z0-9][a-zA-Z0-9]*(\s)?)+$/;
                    if (!regex.test(input)) {
                        $(this).addClass("is-invalid");
                        $(this).next(".text-danger").text("Each word must start with a capital letter or number. No special characters allowed.");
                    } else {
                        $(this).removeClass("is-invalid").addClass("is-valid");
                        $(this).next(".text-danger").text("");
                    }
                }
            });

            // Show feedback on price as user types
            $("#Product_UnitPrice").on("input", function() {
                let price = parseFloat($(this).val());
                if (isNaN(price) || price <= 0) {
                    $(this).addClass("is-invalid");
                    $(this).parent().next(".text-danger").text("Please enter a valid price greater than $0.00");
                } else if (price > 100000) {
                    $(this).addClass("is-invalid");
                    $(this).parent().next(".text-danger").text("Price cannot exceed $100,000");
                } else {
                    $(this).removeClass("is-invalid").addClass("is-valid");
                    $(this).parent().next(".text-danger").text("");
                }
            });
        });
    </script>
}